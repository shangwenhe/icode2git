<template>
    <div class='migrate'> 
        <h2><Icon type="code-working"></Icon> {{ title }}</h2>
        <h4><Icon type="map"></Icon> 迁移仓库</h4>
        <Row>
            <i-col span="11">
                <Alert type="error" v-show="originerror" show-icon>
                    迁移仓库参数出错
                    <span slot="desc">
                        {{ originerror }}
                    </span>
                </Alert>
                <selecte-repertory
                    :sites="sites"
                    :paths="paths"
                    :allpaths="paths"
                    ref="origin"
                    ></selecte-repertory>
                <Row>
                    <i-col span="12">
                        <i-button @click="downloadOriginCode" type="success" long>下载代码</i-button>
                    </i-col>
                    <i-col span="1">
                    &nbsp;
                    </i-col>
                    <i-col span="11">
                        <i-button @click="updateOriginCode" type="warning" long>更新代码</i-button>
                    </i-col>
                </Row>

            </i-col>
            <i-col span="2" :class="['col-middle']">
            <Icon type="arrow-right-a"></Icon>
            <Icon type="network"></Icon> 
            </i-col>
            <i-col span="11">
                <Alert type="error" v-show="targeterror" show-icon>
                    迁移仓库参数出错
                    <span slot="desc">
                        {{ targeterror }}
                    </span>
                </Alert>
                <selecte-repertory
                    :sites="sites"
                    :paths="paths"
                    :allpaths="paths"
                    ref="target"
                    ></selecte-repertory>
                <i-button @click="uploadTargetCode" type="success" disabled long>上传代码</i-button>
            </i-col>
        </Row>
        <h4><Icon type="chatboxes"></Icon> 迁移备注</h4>
        <i-input v-model="mark" type="textarea" :autosize="{minRows: 2,maxRows: 5}" placeholder="请输入..."></i-input>
        <i-button @click="submit" type="success" disabled long>确认提交</i-button>
        <migrate-list :list=list></migrate-list>
    </div>
</template>
<style lang='less'>
.migrate{
    margin: 20px;
    h4{
        margin: 15px 0 10px;
        font-size: 1.1em;
    }
    .col-middle{
        text-align:center;
        font-size: 23px;
        padding-top: 30px;
    }
    .ivu-btn-warning,
    .ivu-btn-success{
        margin: 10px auto 20px;
    }
}

@media (max-width: 800px) {
.migrate{
    .ivu-col-span-11,
    .ivu-col-span-2{
        float: none;
        width: 100%;
    }
    .ivu-col-span-2{
        padding-top: 0px;
    }
}
}
</style>
<script>
    import axios  from '../../static/lib/ajax/axios.js';
    import selecteRepertory from './selecteRepertory.vjs'
    import migrateList from './list.vjs'
    let conf = { status :[
        'start',
        'downloadbefore',
        'update',
        'downloading',
        'downloadafter',
        'uploadbefore',
        'uploading',
        'uploadafter',
        'end'
    ]}

    export default {
        data(){
            return{
                title: '选择迁移',
                sites: [ ],
                paths:[ ],
                list: [],
                origin: '',
                originerror: false,

                target:'',
                targeterror: false,
                mark: '',

                migrateStatus: conf.status[0]
            }
        },
        components:{
            selecteRepertory, 
            migrateList
        },
        beforeCreate(){
            
             axios.get('/api/sites').then( (response) => {
                 this.sites = response.data.data;
             }).catch( (error) => {
                console.log(error)
             });

            axios.get('/api/repertory') .then((response)=>{
                this.paths = response.data.data;
                console.log(this.paths)
            }).catch(function (error) {
                console.log(error);
            });

            axios.get('/api/migrate') .then((response)=>{
                this.list = response.data.data;
            }).catch(function (error) {
                console.log(error);
            });

        },
        methods:{
            submit(){
                let [origin, target, mark] = [this.$refs.origin.path, this.$refs.target.path, this.mark];
                let author = JSON.parse(window.localStorage.getItem('author')); 
                let { username } = author['xiaodu'];

                axios.post('/api/migrate',{
                    origin, target, mark, username
                }) .then((response)=>{
                    console.log(response.data.data);
                }).catch(function (error) {
                    console.log(error);
                });
            },
            uploadTargetCode(){
               // this.$refs.target.path  
            },
            downloadOriginCode(event, mk){
                if(!this.$refs.origin.site ){
                    this.originerror = '请选择站点';
                    return;
                }
                if(!this.$refs.origin.path ){
                    this.originerror = '请选择迁移仓库';
                    return;
                }
                this.originerror = false;

                axios.put('/api/repertory/' + this.$refs.origin.path +'/download',{
                    status: conf.status[1] 
                }) .then((response)=>{
                    console.log(response.data.data);
                }).catch(function (error) {
                    console.log(error);
                });
                 

            },
            updateOriginCode(){
               // this.$refs.origin.path  

                if(!this.$refs.origin.site ){
                    this.originerror = '请选择站点';
                    return;
                }
                if(!this.$refs.origin.path ){
                    this.originerror = '请选择迁移仓库';
                    return;
                }
                this.originerror = false;

                axios.put('/api/repertory/' + this.$refs.origin.path +'/update',{
                    status: conf.status[2] 
                }) .then((response)=>{
                    console.log(response.data.data);
                }).catch(function (error) {
                    console.log(error);
                });
                 
            }
        }
    }
</script>
