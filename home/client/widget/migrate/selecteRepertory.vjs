<template>
    <div class='migrate-repertory'>
        <Alert type="error" v-show="error" show-icon>
            迁移仓库参数出错
            <span slot="desc">
                {{ error }}
            </span>
        </Alert>
        <Row>
            <i-col span="4"><Icon type="link"></Icon> 站点: &nbsp; </i-col>
            <i-col span="20">
                <i-select v-model="info.site">
                    <i-option v-for="item in sites" 
                        :value="item.name" 
                        :key="item">{{ item.name }}: {{item.path}} {{item.describe}}</i-option>
                </i-select>
            </i-col>
        </Row>
        <Row>
            <i-col span="4"><Icon type="fork-repo"></Icon> 仓库地址: &nbsp; </i-col>
            <i-col span="20">
                <i-select v-model="info.path">
                    <i-option v-for="item in paths" 
                        :value="item._id" 
                        :key="item">{{ item.path }}</i-option>
                </i-select>
            </i-col>
        </Row>
    </div>
</template>
<style lang='less'>
.migrate-repertory{
    .ivu-col-span-4{
        line-height: 32px;
    }
    .ivu-row{
        margin: 10px 0;
    }
}
</style>
<script>

    export default{
        data(){
            return {
                status: 'unload',
                sites: [],
                paths:[],
                allpaths:[],

                error: false
            }
        },
        props: ['sites', 'paths', 'allpaths', 'info'],
        watch:{
            'info.site': function(nval,oval){
                this.paths = this.allpaths.filter(function(item, key){
                    // 站点等于当前所选择的站点，且未迁移
                    if(item.site_name === nval && !item.migrate){
                        return true;
                    }
                    return false;
                })
            }
        },
        methods:{
            uploadTargetCode(){
               // this.$refs.target.path  
            },
            downloadOriginCode(event, mk){
                if(!this.info.site ){
                    this.error = '请选择站点';
                    return;
                }
                if(!this.info.path ){
                    this.error = '请选择迁移仓库';
                    return;
                }
                this.error = false;

                axios.put('/api/repertory/' + this.path +'/download',{
                    status: conf.status[1] 
                }) .then((response)=>{
                    console.log(response.data.data);
                }).catch(function (error) {
                    console.log(error);
                });

            },
            updateOriginCode(){
               // this.path  
                if(!this.site ){
                    this.error = '请选择站点';
                    return;
                }
                if(!this.path ){
                    this.error = '请选择迁移仓库';
                    return;
                }
                this.error = false;

                axios.put('/api/repertory/' + this.path +'/update',{
                    status: conf.status[2] 
                }) .then((response)=>{
                    console.log(response.data.data);
                }).catch(function (error) {
                    console.log(error);
                });
                 
            }
        
        }
    }
</script>
