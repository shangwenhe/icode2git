<template>
    <div class='migrate'> 
        <navigator active='migrate'></navigator>
        <h2><Icon type="code-working"></Icon> 选择迁移仓库</h2>
        <Alert type="error" v-show="error" show-icon>
            迁移仓库参数出错
            <span slot="desc">
                {{ error }}
            </span>
        </Alert>
        <h4><Icon type="map"></Icon> 迁移仓库</h4>
        <Row>
            <i-col span="11">
                <selecte-repertory
                    :sites="sites"
                    :paths="paths"
                    :info="migrate.origin"
                    :allpaths="paths"
                    ></selecte-repertory>
            </i-col>
            <i-col span="2" :class="['col-middle']">
                <Icon type="arrow-right-a"></Icon>
                <Icon type="network"></Icon> 
            </i-col>
            <i-col span="11">
                <selecte-repertory
                    :sites="sites"
                    :paths="paths"
                    :info="migrate.target"
                    :allpaths="paths"
                    ></selecte-repertory>
            </i-col>
        </Row>
        <h4><Icon type="chatboxes"></Icon> 迁移备注</h4>
        <i-input v-model="mark" type="textarea" :autosize="{minRows: 2,maxRows: 5}" placeholder="请输入..."></i-input>

        <i-button @click="submit" type="success" long>确认迁移仓库对应关系</i-button>

        <migrate-list :list=list></migrate-list>
    </div>
</template>
<style lang='less'>
.migrate{
    margin: 20px;
    h4{
        margin: 15px 0 10px;
        font-size: 1.1em;
    }
    .col-middle{
        text-align:center;
        font-size: 23px;
        padding-top: 30px;
    }
    .ivu-btn-warning,
    .ivu-btn-success{
        margin: 10px auto 20px;
    }
}

@media (max-width: 800px) {
    .migrate{
    }
}
</style>
<script>
    import axios  from '../../static/lib/ajax/axios.js';
    import selecteRepertory from './selecteRepertory.vjs'
    import migrateList from './list.vjs'
    // import user  from '../../static/lib/user/user.js';
    let user = require('home:static/lib/user/user').default;


    export default {
        data(){
            return{
                sites: [ ],
                paths:[ ],
                list: [],

                migrate:{
                    origin:{
                        path: '',
                        site: ''
                    },
                    target:{
                        path: '',
                        site: ''
                    }
                },
                mark: '',
                error: false
            }
        },
        components:{
            selecteRepertory, 
            migrateList
        },
        beforeCreate(){
            
             axios.get('/api/sites').then( (response) => {
                 this.sites = response.data.data;
             }).catch( (error) => {
                console.log(error)
             });

            axios.get('/api/repertory') .then((response)=>{
                this.paths = response.data.data;
                console.log(this.paths)
            }).catch(function (error) {
                console.log(error);
            });

            axios.get('/api/migrate') .then((response)=>{
                this.list = response.data.data;
            }).catch(function (error) {
                console.log(error);
            });

        },
        methods:{
            submit(){
                let [origin, target, mark] = [this.migrate.origin.path, this.migrate.target.path, this.mark];
                let username  = user.name();
                if(origin === target){
                    this.error = '选择的仓库不能是一样的';
                    return;
                }
                this.error = false;

                axios.post('/api/migrate',{
                    origin, target, mark, username
                }) .then((response)=>{

                    this.migrate = {
                        origin:{
                            path: '',
                            site: ''
                        },
                        target:{
                            path: '',
                            site: ''
                        }
                    };
                    
                }).catch(function (error) {
                    console.log(error);
                });
            },
        }
    }
</script>
